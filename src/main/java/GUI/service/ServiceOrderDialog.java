/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI.service;

import javax.swing.DefaultComboBoxModel;
import BUS.ServiceBUS;
import DTO.ServiceDTO;
import DTO.ServiceOrderDTO;

import java.awt.*;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import java.time.LocalDateTime;
public class ServiceOrderDialog extends javax.swing.JDialog {
    
    private boolean editMode = false;
    private ServiceOrderDTO currentOrder;
    private ServiceOrderDTO resultOrder;
    private ServiceBUS serviceBUS = new ServiceBUS();
    private List<ServiceDTO> services;
    private Map<String, Integer> serviceNameToId = new HashMap<>();
    private Map<Integer, String> serviceIdToName = new HashMap<>();

    public ServiceOrderDialog(Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
        setTitle("Thông tin Đơn Dịch vụ");
        loadServicesToComboBox();
    }

    public ServiceOrderDialog(Window owner, boolean modal) {
        super(JOptionPane.getFrameForComponent(owner), modal);
        initComponents();
        setLocationRelativeTo(owner);
        setTitle("Thông tin Đơn Dịch vụ");
        loadServicesToComboBox();
    }

    public ServiceOrderDTO openForCreate() {
        editMode = false;
        currentOrder = null;
        ordertitle.setText("Thêm đơn dịch vụ");
        clearForm();
        setVisible(true);
        return resultOrder;
    }

    public ServiceOrderDTO openForEdit(ServiceOrderDTO order) {
        editMode = true;
        currentOrder = order;
        ordertitle.setText("Sửa đơn dịch vụ");
        fillForm(order);
        setVisible(true);
        return resultOrder;
    }

    private void clearForm() {
        txtBookingId.setText("");
        cbServiceorder.setSelectedIndex(-1);
        spnQuantityorder.setValue(1);
        txtNote.setText("");
    }

    private void fillForm(ServiceOrderDTO order) {
        txtBookingId.setText(order.getBookingRoomId() + "");
        spnQuantityorder.setValue(order.getQuantity());
        txtNote.setText(order.getNote());
        String serviceName = serviceIdToName.get(order.getServiceId());
        cbServiceorder.setSelectedItem(serviceName);
    }

    private void loadServicesToComboBox() {
        cbServiceorder.removeAllItems();

        ServiceBUS serviceBUS = new ServiceBUS();
        services = serviceBUS.getAll();

         DefaultComboBoxModel<ServiceDTO> model = new DefaultComboBoxModel<>();


        for (ServiceDTO s : services) {
            if (s != null && s.isActive()) {
                model.addElement(s);
            }
        }


        cbServiceorder.setModel(model);


        cbServiceorder.setRenderer(new javax.swing.DefaultListCellRenderer() {
            @Override
            public java.awt.Component getListCellRendererComponent(
                    javax.swing.JList<?> list,
                    Object value,
                    int index,
                    boolean isSelected,
                    boolean cellHasFocus) {

                super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);

                if (value != null && value instanceof ServiceDTO) {
                    ServiceDTO s = (ServiceDTO) value;
                    setText(s.getName());
                } else {
                    setText("");
                }

                return this;
            }
        });
    }

    private boolean validateForm() {
        if (txtBookingId.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập mã đặt phòng!");
            return false;
        }
        if (cbServiceorder.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn dịch vụ!");
            return false;
        }
        return true;
    }

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {
        resultOrder = null;
        dispose();
    }

    public ServiceOrderDTO getResult() {
        return resultOrder;
    }/**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Panel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtBookingId = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnSaveorder = new javax.swing.JButton();
        btnCancelorder = new javax.swing.JButton();
        txtNote = new javax.swing.JTextField();
        cbServiceorder = new javax.swing.JComboBox<>();
        spnQuantityorder = new javax.swing.JSpinner();
        ordertitle = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        Panel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 1, 14))); // NOI18N

        jLabel7.setText("Mã đặt phòng");

        txtBookingId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBookingIdActionPerformed(evt);
            }
        });

        jLabel8.setText("Số lượng");

        jLabel5.setText("Tên dịch vụ");

        jLabel6.setText("Ghi chú");

        btnSaveorder.setText("Lưu");
        btnSaveorder.setActionCommand("Sửa");
        btnSaveorder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveorderActionPerformed(evt);
            }
        });

        btnCancelorder.setText("Huỷ");
        btnCancelorder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelorderActionPerformed(evt);
            }
        });

        txtNote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNoteActionPerformed(evt);
            }
        });

        cbServiceorder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbServiceorderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelLayout = new javax.swing.GroupLayout(Panel);
        Panel.setLayout(PanelLayout);
        PanelLayout.setHorizontalGroup(
            PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtBookingId, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(spnQuantityorder, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(98, 98, 98)))
                .addGap(49, 49, 49)
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PanelLayout.createSequentialGroup()
                        .addComponent(btnSaveorder, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(btnCancelorder))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PanelLayout.createSequentialGroup()
                        .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(25, 25, 25)
                        .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNote)
                            .addComponent(cbServiceorder, 0, 174, Short.MAX_VALUE))))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        PanelLayout.setVerticalGroup(
            PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtBookingId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtNote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(cbServiceorder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spnQuantityorder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSaveorder)
                    .addComponent(btnCancelorder))
                .addGap(39, 39, 39))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(ordertitle)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(ordertitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBookingIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBookingIdActionPerformed
       
    }//GEN-LAST:event_txtBookingIdActionPerformed

    private void btnSaveorderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveorderActionPerformed
          if (!validateForm()) return;

    try {
        int bookingId = Integer.parseInt(txtBookingId.getText().trim());
        ServiceDTO selectedService = services.get(cbServiceorder.getSelectedIndex());
        int quantity = (Integer) spnQuantityorder.getValue();
        String note = txtNote.getText().trim();

        // Lấy giá và thời gian hiện tại
        double unitPrice = selectedService.getUnitPrice();
        LocalDateTime now = LocalDateTime.now();

        if (editMode && currentOrder != null) {
            // --- Chế độ sửa ---
            currentOrder.setBookingRoomId(bookingId);
            currentOrder.setServiceId(selectedService.getServiceId());
            currentOrder.setQuantity(quantity);
            currentOrder.setUnitPrice(unitPrice);
            currentOrder.setOrderedAt(now);
            currentOrder.setNote(note);
            resultOrder = currentOrder;
        } else {
            // --- Chế độ thêm mới ---
            resultOrder = new ServiceOrderDTO(
                0,                // ID (auto increment)
                bookingId,        // booking_room_id
                selectedService.getServiceId(), // service_id
                quantity,         // qty
                unitPrice,        // unit_price (tự lấy từ service)
                now,              // ordered_at (thời gian thêm mới)
                null,             // ordered_by (chưa có user)
                note              // note
            );
        }

        dispose();

    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this,
            "Đã xảy ra lỗi khi lưu đơn dịch vụ!",
            "Lỗi",
            JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnSaveorderActionPerformed

    private void btnCancelorderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelorderActionPerformed
         resultOrder = null;
        dispose();
    }//GEN-LAST:event_btnCancelorderActionPerformed

    private void txtNoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNoteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoteActionPerformed

    private void cbServiceorderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbServiceorderActionPerformed

    }//GEN-LAST:event_cbServiceorderActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ServiceOrderDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ServiceOrderDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ServiceOrderDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ServiceOrderDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
        public void run() {
            ServiceOrderDialog dialog = new ServiceOrderDialog(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        }
    });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Panel;
    private javax.swing.JButton btnCancelorder;
    private javax.swing.JButton btnSaveorder;
    private javax.swing.JComboBox<ServiceDTO> cbServiceorder;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel ordertitle;
    private javax.swing.JSpinner spnQuantityorder;
    private javax.swing.JTextField txtBookingId;
    private javax.swing.JTextField txtNote;
    // End of variables declaration//GEN-END:variables
}
